<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

    <!--导入配置文件-->
    <context:property-placeholder location="classpath:resources.properties,classpath:pay.properties"/>

    <!-- MVC扫描 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.bisa.health.shiro.web.bind.CurrentUserResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 开启controller注解支持 -->
   	<!-- 开启controller注解支持 -->
	<context:component-scan base-package="com.bisa.health.**.controller"
		use-default-filters="false">
        <context:include-filter type="annotation"
                 expression="org.springframework.context.annotation.Configuration" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RestController" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

    <!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- 静态资源映射 -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>
 	<mvc:resources mapping="/html/**" location="/WEB-INF/html/"/>

  <!-- 定义HTML文件的位置 -->  
     <bean id="htmlviewResolver"    
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">   
        <property name="viewClass" value="com.bisa.health.shop.component.HtmlResourceView"/>  
        <property name="order" value="0" />  
        <property name="prefix" value="/WEB-INF/html/"/>  
        <property name="suffix" value=".html" />    
        <property name="contentType" value="text/html;charset=UTF-8"></property>    
    </bean>  
    <!-- 定义JSP文件的位置 -->  
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="order" value="1" />  
        <property name="prefix" value="/WEB-INF/jsp/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean>  

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- 
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>-->

    <!--上传文件配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000000"></property>
    </bean>


    <!-- 配置SessionLocaleResolver用于将Locale对象存储于Session中供后续使用 默认是繁体 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="zh_HK"></property>
    </bean>

    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <!--lang是前台切换语言的时候的参数名字-->
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!-- 全局异常配置 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
        <props>
            <prop key="java.lang.Exception">errors/500</prop>
            <prop key="java.lang.Throwable">errors/500</prop>
        </props>
    </property>
        <property name="statusCodes">
            <props>
                <prop key="errors/500">500</prop>
                  <prop key="errors/404">404</prop>
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"></property>
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="errors/500"></property>
        <!-- 默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"></property>
    </bean>
    
    		
	<bean id="defaultKaptcha" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<!-- 验证码宽度 -->
						<prop key="kaptcha.image.width">110</prop>
						<!-- 验证码高度 -->
						<prop key="kaptcha.image.height">40</prop>
						<!-- 生成验证码内容范围 -->
						<prop key="kaptcha.textproducer.char.string">0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ</prop>
						<!-- 验证码个数 -->
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<!-- 是否有边框 -->
						<prop key="kaptcha.border">no</prop>
						<!-- 边框颜色 -->
						<prop key="kaptcha.border.color">105,179,90</prop>
						<!-- 边框厚度 -->
						<prop key="kaptcha.border.thickness">1</prop>
						<!-- 验证码字体颜色 -->
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<!-- 验证码字体大小 -->
						<prop key="kaptcha.textproducer.font.size">30</prop>
						<!-- 验证码所属字体样式 -->
						<prop key="kaptcha.textproducer.font.names">楷体</prop>
						<!-- 干扰线颜色 -->
						<prop key="kaptcha.noise.color">black</prop>
						<!-- 验证码文本字符间距 -->
						<prop key="kaptcha.textproducer.char.space">3</prop>
						<!-- 图片样式 :阴影-->
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

    <import resource="spring-mvc-shiro.xml"/>
 	<import resource="spring-client-service.xml"/>
</beans>
